const hamburger = document.querySelector(".hamburger");
const menu = document.querySelector(".opened__menu");
const close = document.querySelector(".close-icon");
const body = document.querySelector("body");

hamburger.addEventListener("click", function(event) {
  event.preventDefault();
  menu.classList.add("opened__menu--active");
  body.classList.add("noscroll");
})

close.addEventListener("click", function(event) {
  menu.classList.remove("opened__menu--active");
  body.classList.remove("noscroll");
})
;const openItem = item => {
  const container = item.closest(".team__item");
  const contentBlock = container.find(".team__content");
  const textBlock = contentBlock.find(".team__content-block");
  const reqHeight = textBlock.height();

  container.addClass("active");
  contentBlock.height(reqHeight);
};

const closeEveryItem = container => {
  const items = container.find(".team__content");
  const itemContainer = container.find(".team__item");

  itemContainer.removeClass("active");
  items.height(0);
};


$('.team__title').click (e => {
  const $this = $(e.currentTarget);
  const container = $this.closest('.team');
  const elemContainer = $this.closest(".team__item");

  if (elemContainer.hasClass("active")) {
    closeEveryItem(container);
  } else { 
    closeEveryItem(container);
    openItem($this);
  }
});;  
(function () {
  let myMap;
  
  const init = () => {
    myMap = new ymaps.Map("map", {
      center: [55.661689, 37.747406],
      zoom: 16,
      controls: ['zoomControl']
    });
  
    const coords = [
      [55.661562, 37.744073],
      [55.664009, 37.743813],
      [55.659647, 37.749661],
      [55.662750, 37.747100]
    ];
  
    var myCollection = new ymaps.GeoObjectCollection({}, {
      draggable: false,
      iconLayout: 'default#image',
      iconImageHref: '../images/icons/marker.svg',
      iconImageSize: [46, 57],
      iconImageOffset: [-21, -60]
    });
  
    coords.forEach(coord => {
      myCollection.add(new ymaps.Placemark(coord))
    });
  
    myMap.geoObjects.add(myCollection);
  
    myMap.behaviors.disable('scrollZoom');
  }
  
  ymaps.ready(init);
  
  }());;const mesureWidth = item => {
  let reqItemWidth = 0;
  const screenWidth = $(window).width();
  const container = item.closest(".products-menu");
  const titlesBlocks = container.find(".products-menu__title");
  const titlesWidth = titlesBlocks.width() * titlesBlocks.length;

  const textContainer = item.find(".products-menu__container");
  const paddingLeft = parseInt(textContainer.css("padding-left"));
  const paddingRight = parseInt(textContainer.css("padding-right"));

  const isMobile = window.matchMedia("(max-width: 768px)").matches;

  if (isMobile) {
    reqItemWidth = screenWidth - titlesWidth;
  } else {
    reqItemWidth = 500;  
  }

  return {
    container: reqItemWidth,
    textContainer: reqItemWidth - paddingRight - paddingLeft
  }
};

const closeEveryItemInContainer = (container) => {
  const items = container.find(".products-menu__item");
  const content = container.find (".products-menu__content");

  items.removeClass("active");
  content.width(0);
};

const openingItem = item => {
  const hiddenContent = item.find(".products-menu__content");
  const reqWidth = mesureWidth(item);
  const textBlock = item.find(".products-menu__container");

  item.addClass("active");
  hiddenContent.width(reqWidth.container);
  textBlock.width(reqWidth.textContainer);
};

$(".products-menu__title").on("click", (e) => {
  e.preventDefault();

  const $this = $(e.currentTarget);
  const item = $this.closest(".products-menu__item");
  const itemOpened = item.hasClass("active");
  const container = $this.closest(".products-menu");

  if (itemOpened) {
    closeEveryItemInContainer(container)
  } else {
    closeEveryItemInContainer(container)
    openingItem(item);
  }
});

$(".products-menu__close").on("click", (e) => {
  e.preventDefault();

  closeEveryItemInContainer($(".products-menu"));
});;const validateFields = (form, fieldsArray) => {
  
  fieldsArray.forEach((field) => {
    field.removeClass("input-error");
    if(field.val().trim()== "") {
      field.addClass("input-error");
    }
  });

  const errorFields = form.find('.input-error');

  return errorFields.length == 0;
}
$('.form').submit((e)=> {
  e.preventDefault();

  const form = $(e.currentTarget);
  const name = form.find("[name='name']");
  const phone = form.find("[name='phone']");
  const comment = form.find("[name='comment']");
  const to = form.find("[name='to']");

  const modal = $("#modal");
  const content = modal.find("modal__content")

  const isValid = validateFields(form, [name, phone, comment, to]);

  modal.removeClass("error-modal");
  
  if(isValid) {
   const request = $.ajax({
      url: "https://webdev-api.loftschool.com/sendmail",
      method: "post",
      data: {
        name: name.val(),
        phone: phone.val(),
        comment: comment.val(),
        to: to.val()
      },
    });

    request.done((data) => {
      content.text(data.message);
      });

    request.fail((data) => {   
      const message = data.responseJSON.message;
      content.text(message);
      modal.addClass("error-modal");
    });

    request.always(() => {
      $.fancybox.open({
        src: "#modal",
        type: "inline",
          
      });
    });
   }
});

$('.button-close').click(e => { 
  e.preventDefault();

  const form = $(e.currentTarget);

  $.fancybox.close();
  
  $('#form')[0].reset();
});

;const sections = $("section");
const display = $(".maincontent");
const sideMenu = $(".fixed-menu");
const menuItems = sideMenu.find("fixed-menu__item");

let inScroll = false;

const countSectionPosition = sectionEq => {
  return sectionEq * -100;
}

const changeMenuThemeForSection = (sectionEq) => {
  const currentSection = sections.eq(sectionEq);
  const menuTheme = currentSection.attr("data-sidemenu-theme");
  const activeClass = "fixed-menu--shadowed";


    if (menuTheme == "black") {
      sideMenu.addClass(activeClass);
    } else {
      sideMenu.removeClass(activeClass);
    }

}

const resetActiveClassForItem = (items, itemEq, activeClass) => {
  items.eq(itemEq).addClass(activeClass).siblings().removeClass(activeClass);
}

const performTransition = (sectionEq) => {
  if(inScroll) return;
    
  const transitionOver = 1000;
  const mouseInertiaOver = 300;

    inScroll = true;
    
    const position = countSectionPosition(sectionEq);

    changeMenuThemeForSection(sectionEq);

    display.css({
      transform: `translateY(${position}%)`,
    });

   resetActiveClassForItem(sections, sectionEq, "active");

   /*sections.eq(sectionEq).addClass("active").siblings().removeClass("active");*/

   sideMenu.find(".fixed-menu__item").eq(sectionEq).addClass("fixed-menu__item--active").siblings().removeClass("fixed-menu__item--active");

   setTimeout(() => {
    inScroll = false;
    resetActiveClassForItem(menuItems, sectionEq, "fixed-menu__item--active");
   }, transitionOver + mouseInertiaOver);
 
};

const scrollViewport = (direction) => {
  const activeSection = sections.filter(".active"); 
  const nextSection = activeSection.next();
  const prevSection = activeSection.prev();

  if (direction == "next" && nextSection.length) {
    performTransition(nextSection.index());
  }

  if (direction == "prev" && prevSection.length) {
    performTransition(prevSection.index());
  }
};

$(window).on("wheel", (e) => {
  const deltaY = e.originalEvent.deltaY;

  if (deltaY > 0) {
    
    scrollViewport("next");
  }

  if (deltaY < 0) {

    scrollViewport("prev");
  }
});

$(window).on("keydown", (e) => {

  const tagName = e.target.tagName.toLowerCase();
  const userTypingInputs = tagName == "input" || tagName == "textarea";

  if (userTypingInputs) return; 
    switch (e.keyCode) {
      case 38:
        scrollViewport("prev");
        break;
    
        case 40:
        scrollViewport("next");
        break;
   }
});

$("[data-scroll-to]").click(e =>{
  e.preventDefault();

  const $this = $(e.currentTarget);
  const target = $this.attr("data-scroll-to");
  const reqSection = $(`[data-section-id=${target}]`);

  performTransition(reqSection.index());


});;let player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player("yt-player", {
    height: "370",
    width: "660",
    videoId: "awtmTJW9ic8",
    playerVars: {
      controls: 0,
      disablekb: 0,
      showinfo: 0,
      rel: 0,
      autoplay: 0,
      modestbranding: 0
    },
    events: {
      onReady: onPlayerReady,
      onStateChange: onPlayerStateChange
    }
  });
}

function onPlayerStateChange(event) {
  const playerButton = $(".player__start");
  switch (event.data) {
    case 1:
      $(".player__wrapper").addClass("player__wrapper--active");
      playerButton.addClass("paused");
      break;
    case 2:
      playerButton.removeClass("paused");
      break;
  }
}

function onPlayerReady() {
  const duration = player.getDuration();
  let interval;

  clearInterval(interval);

  interval = setInterval(() => {
    const completedSeconds = player.getCurrentTime();
    const percent = (completedSeconds / duration) * 100;

    $(".player__playback-button").css({
      left: `${percent}%`
    });
  }, 1000);
}

$(".player__start").on("click", e => {
  const btn = $(e.currentTarget);

  if (btn.hasClass("paused")) {
    player.pauseVideo();
  } else {
    player.playVideo();
  }
});

$(".player__duration-line").on("click", e => {
  e.preventDefault();
  const bar = $(e.currentTarget);
  const newButtonPosition = e.pageX - bar.offset().left;
  const clickedPercent = (newButtonPosition / bar.width()) * 100;
  const newPlayerTime = (player.getDuration() / 100) * clickedPercent;

  $(".player__playback-button").css({
    left: `${clickedPercent}%`
  });

  player.seekTo(newPlayerTime);
});

$(".player__splash").on("click", e => {
  player.playVideo();
});

// sound
setTimeout(function() {
  const volBtn = $(".player__volume-button");
  const posVolBtnPx = volBtn.css("left");
  const posVolBtn = parseInt(posVolBtnPx);
  const volBar = document.querySelector(".player__volume-line");
  const volBarStyle = getComputedStyle(volBar);
  const volBarWidth = parseInt(volBarStyle.width);

  const posVolumePercent = (posVolBtn / volBarWidth) * 100;
  console.log(posVolumePercent);
  player.setVolume(posVolumePercent);

  $(".player__volume-line").on("click", e => {
    e.preventDefault();
    const barVol = $(e.currentTarget);
    const newButtonVolPosition = e.pageX - barVol.offset().left;
    const clickedVolPercent = (newButtonVolPosition / barVol.width()) * 100;

    if (clickedVolPercent < 100) {
      $(".player__volume-button").css({
        left: `${clickedVolPercent}%`
      });
    } else {
      $(".player__volume-button").css({
        left: `100%`
      });
    }

    player.unMute();
    player.setVolume(clickedVolPercent);
  });

  $(".player__volume-pic").on("click", e => {
    if (player.isMuted()) {
      player.unMute();
      $(".player__volume-button").css({
        left: `${posVolumePercent}%`
      });
      player.setVolume(posVolumePercent);
    } else {
      player.mute();
      $(".player__volume-button").css({
        left: 0
      });
    }
  });
}, 2000);;const slider = $(".slider").bxSlider({
  pager: false,
  controls: false
});

$(".arrow-left").click((e) => {

  slider.goToPrevSlide();

});

$(".arrow-right").click((e) => {

  slider.goToNextSlide();

});;const findBlockByAlias = (alias) => {
  return $(".reviews-item").filter((ndx, item) => {
    return $(item).attr("data-linked-with") == alias;
  });
};
$(".reviews-switcher__link").click((e) => { 
  e.preventDefault();


  const $this = $(e.currentTarget);
  const target = $this.attr("data-open");
  const itemToShow = findBlockByAlias(target);
  const curItem = $this.closest(".reviews-switcher__item");


  itemToShow.addClass("active").siblings().removeClass("active");
  curItem.addClass("active").siblings().removeClass("active");
}); 
//# sourceMappingURL=data:application/json;charset=utf8;base64,
